/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package encoreimpex;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author HAMZA
 */
public class EmployeeDetails extends javax.swing.JFrame {
    Connection conn = null;
    PreparedStatement pst =null;
    ResultSet rs = null;
    private Vector<String> toDelete;
    
     private final String FullName;
    public EmployeeDetails(String FullName) {
        this.FullName = FullName;
        toDelete = new Vector<>();
        initComponents();
        retrieveDatabase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Table_EmpDeets = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Table_EmpDeets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Full Name", "Date of Birth", "Address", "Aadhar Number", "Sex", "Password", "User Type"
            }
        ));
        jScrollPane1.setViewportView(Table_EmpDeets);

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Employee Details");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jButton3)
                        .addGap(37, 37, 37)
                        .addComponent(jButton1)
                        .addGap(35, 35, 35)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(247, 247, 247))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                conn = DBConnect.connect();
        for(int i = 0; i < toDelete.size(); i++) {
            try {
    String sql = "SELECT FullName FROM employees WHERE AadharNumber=?";
    pst = conn.prepareStatement(sql);
    pst.setString(1, toDelete.get(i));
    ResultSet rs = pst.executeQuery();
    while(rs.next()) {
        sql = "DELETE FROM user WHERE FullName = ?";
        pst = conn.prepareStatement(sql);
        pst.setString(1, rs.getString("FullName"));
        pst.executeUpdate();
    }
} catch (SQLException e) {
}
            String sql = "DELETE FROM employees WHERE AadharNumber='" + toDelete.get(i) + "'";
            try {
                pst=conn.prepareStatement(sql);
            } catch (SQLException ex) {
                Logger.getLogger(EmployeeDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                pst.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(EmployeeDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            DefaultTableModel tableModel = (DefaultTableModel) Table_EmpDeets.getModel();
            int columnCount = tableModel.getColumnCount();
            int rowCount = tableModel.getRowCount();
            Vector<String> columnNames = new Vector<String>();
            int schoolCodeIndex = 0;
           
            for(int x = 0; x < columnCount; x++) {
                String colName = tableModel.getColumnName(x);
                columnNames.add(colName);
                if(colName.equals("AadharNumber")) {
                schoolCodeIndex = x;
                }
            }
            String sql = "UPDATE employees SET ";
            for(int z = 0; z < columnCount; z++) {
                sql = sql + columnNames.get(z) + " = ?";
                if(z < columnCount-1) {
                sql = sql + ", ";
                }
            }
            sql = sql + " WHERE " + columnNames.get(schoolCodeIndex) + " = ?";
            for(int y = 0; y < rowCount; y++) {
                try {
                    pst = conn.prepareStatement(sql);
                    for(int j = 0; j < columnCount; j++) {
                    Object val = tableModel.getValueAt(y, j);
                    pst.setObject(j+1, val);
                    }
                    Object schoolCode = tableModel.getValueAt(y, schoolCodeIndex);
                    pst.setObject(columnCount+1, schoolCode);
                   
                } catch (SQLException ex) {
                    Logger.getLogger(EmployeeDetails.class.getName()).log(Level.SEVERE, null, ex);
                   
                   
                }
                try {
                    System.out.println("Executing: " + sql);
                    pst.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(EmployeeDetails.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                int selectedRow = Table_EmpDeets.getSelectedRow();
        if(selectedRow > -1) {
            int columnIndex = Table_EmpDeets.getColumn("AadharNumber").getModelIndex();
            String schoolCode = Table_EmpDeets.getValueAt(selectedRow, columnIndex).toString();
            toDelete.add(schoolCode);
            DefaultTableModel tableModel = (DefaultTableModel) Table_EmpDeets.getModel();
            tableModel.removeRow(selectedRow);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         AdminDashboard ad = new AdminDashboard(FullName);
        ad.setVisible(true);
        this.dispose();     
        retrieveDatabase();
        toDelete.clear();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    private void retrieveDatabase() {
        try {
            conn=DBConnect.connect();
            String sql = "select * from employees";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            ResultSetMetaData metaData = rs.getMetaData();
            int columnCount = metaData.getColumnCount();
            Vector<Vector<Object>> tableData = new Vector<>();
            Vector<String> columnNames = new Vector<>();
            for (int i = 1; i <= columnCount; i++) {
                String colName = metaData.getColumnName(i);
                columnNames.add(colName);
            }
            while (rs.next()){
                Vector<Object> row = new Vector<Object>();
                for (int i = 1; i <= columnCount; i++) {
                    Object field = rs.getObject(i);
                    row.add(field);
                }
                tableData.add(row);
            }
            DefaultTableModel tableModel = new DefaultTableModel(tableData, columnNames);
            Table_EmpDeets.setModel(tableModel);
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeDetails().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table_EmpDeets;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
